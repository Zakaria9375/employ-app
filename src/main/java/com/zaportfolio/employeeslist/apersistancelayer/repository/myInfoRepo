The main responsibilities, functions, and role of the EmployeeRepository interface are as follows:

    Data Access:

        The EmployeeRepository interface provides a way to interact with the underlying data storage
        (in this case, the MySQL database) for performing CRUD
        (Create, Read, Update, Delete) operations on Employee entities.
        It acts as an abstraction layer between the application and the database,
        allowing developers to interact with the database without writing low-level SQL queries.

    Querying:

         The EmployeeRepository interface enables querying capabilities for retrieving specific employee records
        based on various criteria. It allows you to define custom query methods
        following Spring Data JPA naming conventions,
        such as findByLastName(String lastName) to find employees by their last name,
         or even define more complex queries using @Query annotations.

    Inheritance of CRUD Operations:

         By extending JpaRepository,
        the EmployeeRepository interface inherits basic CRUD operations like save(), findById(), findAll(), and delete().
         These methods provide a convenient way to interact with the database and
         perform common data manipulation tasks on the Employee entity.

    Paging, Sorting, and Pagination:

        JpaRepository provides additional methods for implementing pagination and sorting,
         such as findAll(Pageable pageable) and findAll(Sort sort).
         These methods allow you to retrieve data in smaller chunks and control the
         order in which the results are returned.

    Transaction Management:

        The EmployeeRepository interface supports transaction management,
        ensuring that database operations performed through the repository interface are executed within a transactional context.
         This helps maintain data integrity and consistency.

Both JpaRepository and CrudRepository are interfaces provided by Spring Data JPA,
but JpaRepository is an extension of CrudRepository with added capabilities.
it inherits all the methods from CrudRepository and gains additional methods specific to JPA,
such as sorting, pagination, and flushing.
